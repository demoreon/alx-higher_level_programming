A function that divides all elements of a matrix
================================================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([], '3')
Traceback (most recent call last):
   ...
TypeError: div must be a number

>>> matrix_divided([], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Passing a string instead of a list
>>> matrix_divided('a', 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a list instead of a matrix (zero length)
>>> matrix_divided([], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing an element to a list and not matrix
>>> matrix_divided([2], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing an empty row into the matrix
>>> matrix_divided([[]], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a character into the row
>>> matrix_divided([[3,'4']], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing different sizes of list to matrix
>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Passing an accurate list of lists of integers
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Dividing a matrix by a float number:

>>> matrix_divided([[10, 20, 30], [1.33, 3.74, 6.89], [-8, -9.71, 0]], 5.3)
[[1.89, 3.77, 5.66], [0.25, 0.71, 1.3], [-1.51, -1.83, 0.0]]

Passing a tuple as an argument:

>>> matrix_divided((3, 6, 9), 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing one argument
>>> matrix_divided(3)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'

Passing zero argument
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

Dividing a matrix which its elements aren't integer/float numbers 2:

>>> matrix_divided([["1"], ["2", "3"], ["5", "6", "7"]], 10)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

passing div as a list

>>> matrix_divided([[5.7, 8.1], [7.7, 4.9]], [2])
Traceback (most recent call last):
...
TypeError: div must be a number

Passing a matrix which one of its elements is an empty list:

>>> matrix_divided([[2.1, 5.8], [], [10, -3]], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a matrix which one of its elements is a tuple:

