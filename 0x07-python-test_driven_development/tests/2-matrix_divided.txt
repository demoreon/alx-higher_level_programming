A function that divides all elements of a matrix
================================================
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix_divided([], '3')
Traceback (most recent call last):
   ...
TypeError: div must be a number

>>> matrix_divided([], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

Passing a string instead of a list
>>> matrix_divided('a', 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a list instead of a matrix (zero length)
>>> matrix_divided([], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing an element to a list and not matrix
>>> matrix_divided([2], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing an empty row into the matrix
>>> matrix_divided([[]], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing a character into the row
>>> matrix_divided([[3,'4']], 8)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

Passing different sizes of list to matrix
>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

Passing an accurate list of lists of integers
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]
